generate:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      source /usr/local/bin/thisroot.sh
      python /code/generantuple.py {type} {nevents} {outputfile}
  environment:
    environment_type: docker-encapsulated
    image: reanahub/reana-demo-bsm-search
    imagetag: 1.0.0
  publisher:
    publisher_type: 'frompar-pub'
    outputmap:
      outputfile: 'outputfile'

select:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      source /usr/local/bin/thisroot.sh
      python /code/select.py {inputfile} {outputfile} {region} nominal
  environment:
    environment_type: docker-encapsulated
    image: reanahub/reana-demo-bsm-search
    imagetag: 1.0.0
  publisher:
    publisher_type: 'frompar-pub'
    outputmap:
      outputfile: 'outputfile'

select_mc:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      source /usr/local/bin/thisroot.sh
      variations=$(echo {variations}|sed 's| |,|g')
      python /code/select.py {inputfile} {outputfile} {region} $variations
  environment:
    environment_type: docker-encapsulated
    image: reanahub/reana-demo-bsm-search
    imagetag: 1.0.0
  publisher:
    publisher_type: 'frompar-pub'
    outputmap:
      outputfile: 'outputfile'

histogram:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      source /usr/local/bin/thisroot.sh
      variations=$(echo {variations}|sed 's| |,|g')
      python /code/histogram.py {inputfile} {outputfile} {name} {weight} $variations
  environment:
    environment_type: docker-encapsulated
    image: reanahub/reana-demo-bsm-search
    imagetag: 1.0.0
  publisher:
    publisher_type: 'frompar-pub'
    outputmap:
      outputfile: 'outputfile'

histogram_shape:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      source /usr/local/bin/thisroot.sh
      variations=$(echo {variations}|sed 's| |,|g')
      name="{name}_{shapevar}"
      python /code/histogram.py {inputfile} {outputfile} $name {weight} $variations '{{name}}'
  environment:
    environment_type: docker-encapsulated
    image: reanahub/reana-demo-bsm-search
    imagetag: 1.0.0
  publisher:
    publisher_type: 'frompar-pub'
    outputmap:
      outputfile: 'outputfile'

makews:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      source /usr/local/bin/thisroot.sh
      python /code/makews.py {data_bkg_hists} {workspace_prefix} {xml_dir}
  environment:
    environment_type: docker-encapsulated
    image: reanahub/reana-demo-bsm-search
    imagetag: 1.0.0
  publisher:
    publisher_type: 'interpolated-pub'
    glob: True
    publish:
      workspace: '{workspace_prefix}*combined*model.root'

merge_root:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      source /usr/local/bin/thisroot.sh
      hadd {mergedfile} {inputs}
  environment:
    environment_type: docker-encapsulated
    image: reanahub/reana-env-root6
    imagetag: 6.18.04
  publisher:
    publisher_type: 'frompar-pub'
    outputmap:
      mergedfile: 'mergedfile'

merge_root_allpars:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      source /usr/local/bin/thisroot.sh
      hadd {mergedfile} {signal} {data} {background}
  environment:
    environment_type: docker-encapsulated
    image: reanahub/reana-env-root6
    imagetag: 6.18.04
  publisher:
    publisher_type: 'frompar-pub'
    outputmap:
      mergedfile: 'mergedfile'

plot:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      source /usr/local/bin/thisroot.sh
      hfquickplot write-vardef {combined_model} combined {nominal_vals}
      hfquickplot plot-channel {combined_model} combined channel1 x {nominal_vals} -c qcd,mc2,mc1,signal -o {prefit_plot}
      hfquickplot fit {combined_model} combined {fit_results}
      hfquickplot plot-channel {combined_model} combined channel1 x {fit_results} -c qcd,mc2,mc1,signal -o {postfit_plot}
  environment:
    environment_type: docker-encapsulated
    image: reanahub/reana-demo-bsm-search
    imagetag: 1.0.0
  publisher:
    publisher_type: 'frompar-pub'
    outputmap:
      prefit: 'prefit_plot'
      postfit: 'postfit_plot'

hepdata:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      source /usr/local/bin/thisroot.sh
      python /code/hepdata_export.py {combined_model} {hepdata_submission_yaml} {hepdata_data1_yaml}
      zip {hepdata_submission_zip} {hepdata_submission_yaml} {hepdata_data1_yaml}
  environment:
    environment_type: docker-encapsulated
    image: reanahub/reana-demo-bsm-search
    imagetag: 1.0.0
  publisher:
    publisher_type: 'frompar-pub'
    outputmap:
      hepdata_submission_zip: 'hepdata_submission_zip'
