initialise:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      
      cp {output_file}
  publisher:
    publisher_type: fromyaml-pub
    yamlfile: 'files.yaml'
  environment:
    environment_type: docker-encapsulated
    image: alintulu/cmssw
    imagetag: 10_6_12-comparison-plots

cernopendata:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      echo {recid}
      cernopendata-client get-file-locations --recid {recid} --protocol xrootd > output.txt
      sed -n '1p' output.txt > {outputfile}
      cat {outputfile}
  environment:
    environment_type: docker-encapsulated
    image: cernopendata/cernopendata-client
    imagetag: 0.3.0
  publisher:
    publisher_type: 'frompar-pub'
    outputmap:
      outputfile: 'outputfile'

cmsRun:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      source /opt/cms/entrypoint.sh
      echo "Setting up CMSSW_7_6_7"
      source /cvmfs/cms.cern.ch/cmsset_default.sh
      scramv1 project CMSSW CMSSW_7_6_7
      cmsrel CMSSW_7_6_7
      cd CMSSW_7_6_7/src
      cmsenv
      echo "CMSSW should now be available."
      wget https://raw.githubusercontent.com/cms-sw/genproductions/master/Utilities/calculateXSectionAndFilterEfficiency/genXsec_cfg.py -O ana.py
      cmsRun ana.py inputFiles="file:$(<{inputFile})" maxEvents=-1 > {outputfile} 2>&1
  environment:
    environment_type: docker-encapsulated
    image: cmsopendata/cmssw_7_6_7-slc6_amd64_gcc493
    imagetag: latest
  publisher:
    publisher_type: 'frompar-pub'
    outputmap:
      outputfile: 'outputfile'

test:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      # cp {inputFile} .
      # ls
      # wget https://raw.githubusercontent.com/Ari-mu-l/genproductions/master/Utilities/calculateXSectionAndFilterEfficiency/output_to_numpy.py -O output_to_numpy.py
      # ls
      # python output_to_numpy.py
      # echo "import numpy" > {outputfile}
      ls
  environment:
    environment_type: docker-encapsulated
    image: alpine
    imagetag: 3.18.2
  publisher:
    publisher_type: 'frompar-pub'
    outputmap:
      outputfile: 'outputfile'